"""
Django settings for SellerService project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# TEST MODE
MODE = "PRODUCTION"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
if MODE=="LOCAL_TEST" or MODE=='LOCAL':
    SECRET_KEY = "django-insecure-0rl1bkibgt7z+#^ud8yi-55=2fwq7+51c+hz&@hm9*718a1v=!"
else: # MODE = PRODUCTION
    SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

if MODE == 'PRODUCTION':
    ALLOWED_HOSTS = ["*"]
else: # MODE = LOCAL or LOCAL_TEST
    ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "sharedb",
    "seller",
    'mail',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'SellerService.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'SellerService.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

''' # sqlite
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR.parent / 'db.sqlite3',
    }
}
'''

# PostgreSQL
if MODE == 'LOCAL_TEST':
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'moa_gudok', # Schema Name
            'USER': 'test', 
            'PASSWORD': 'test', # PASSWORD NAME
            'HOST': '127.0.0.1', 
            'PORT': '5432', 
        }
    }
elif MODE == 'PRODUCTION':
    DATABASES = {
        'default': {
            'ENGINE': os.environ.get("PRODUCTION_ENGINE"),
            'NAME': os.environ.get("PRODUCTION_NAME"), # Schema Name
            'USER': os.environ.get("PRODUCTION_USER"),
            'PASSWORD': os.environ.get("PRODUCTION_PASSWORD"), # PASSWORD NAME
            'HOST':os.environ.get("PRODUCTION_HOST"),
            'PORT':os.environ.get("PRODUCTION_PORT"),
        }
    }
else: # MODE=LOCAL
    DATABASES = {
        'default': {
            'ENGINE': os.environ.get("DB_ENGINE"),
            'NAME': os.environ.get("DB_NAME"), # Schema Name
            'USER': os.environ.get("DB_USER"),
            'PASSWORD': os.environ.get("DB_PASSWORD"), # PASSWORD NAME
            'HOST':os.environ.get("DB_HOST"),
            'PORT':os.environ.get("DB_PORT"),
        }
    }

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = "smtp.gmail.com"
EMAIL_HOST_USER = os.environ.get("GMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.environ.get("GMAIL_HOST_PASSWORD") # gmail or naver 2단계 보안 인증 - 앱 비밀번호 
EMAIL_PORT = int(os.environ.get("GMAIL_PORT"))# gmail, naver SMTP 포트 
EMAIL_USE_TLS = True # TLS Setting
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# CORS
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = "sharedb.User"
